/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.avbravo.reportwizard;

import java.awt.GridBagConstraints;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.avbravo.reportwizard.beans.Atributos;
import org.avbravo.reportwizard.beans.Entidad;
import org.avbravo.reportwizard.domains.EntityReader;
import org.avbravo.reportwizard.domains.MySession;
import org.avbravo.reportwizard.domains.Parameters;
import org.avbravo.reportwizard.domains.Utilidades;
import org.avbravo.reportwizard.projects.ProyectoInformacion;
import org.netbeans.api.project.Project;
import org.netbeans.api.project.ProjectManager;
import org.netbeans.api.project.ui.OpenProjects;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.avbravo.reportwizard//ReportWizard//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "ReportWizardTopComponent",
        iconBase = "org/avbravo/reportwizard/print.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = false)
@ActionID(category = "Window", id = "org.avbravo.reportwizard.ReportWizardTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ReportWizardAction",
        preferredID = "ReportWizardTopComponent"
)
@Messages({
    "CTL_ReportWizardAction=ReportWizard",
    "CTL_ReportWizardTopComponent=ReportWizard Window",
    "HINT_ReportWizardTopComponent=This is a ReportWizard window"
})
public final class ReportWizardTopComponent extends TopComponent {

    private GridBagConstraints constraints = new GridBagConstraints();
    NotifyDescriptor nd;
    Boolean entityValid = false;
    Boolean parametersValid = false;
    List<Parameters> parametersList = new ArrayList<>();
//    DefaultMutableTreeNode root = new DefaultMutableTreeNode("Report");
//    DefaultMutableTreeNode fieldNode = new DefaultMutableTreeNode("Field");
//    DefaultMutableTreeNode parametersNode = new DefaultMutableTreeNode("Parameters");
    DefaultMutableTreeNode root;
    DefaultMutableTreeNode fieldNode;
    DefaultMutableTreeNode parametersNode;
    DefaultTreeModel modelo;

    Boolean moveField = false;
    Boolean moveParameters = false;
    String nameOfFieldOrParameters = "";

    public ReportWizardTopComponent() {
        initComponents();
        setName(Bundle.CTL_ReportWizardTopComponent());
        setToolTipText(Bundle.HINT_ReportWizardTopComponent());
        jTabbedPane1.remove(jPanelReporte);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelProyecto = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jTextFieldNameOfProject = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldNameOfPackage = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabelEntity = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaEntity = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButtonGoPage2 = new javax.swing.JButton();
        jPanelReporte = new javax.swing.JPanel();
        jTabbedPaneReporte = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPaneJasperAll = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldTituloofReportAll = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jButtonAll = new javax.swing.JButton();
        jButtonDetails = new javax.swing.JButton();
        jButtonGoPage1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPaneDetails = new javax.swing.JEditorPane();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldTituloOfReportDetails = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxPaginaDetails = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jPanel6.border.title"))); // NOI18N

        jTextFieldNameOfProject.setEditable(false);
        jTextFieldNameOfProject.setText(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jTextFieldNameOfProject.text")); // NOI18N

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/avbravo/reportwizard/resources/project.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jLabel5.text")); // NOI18N

        jTextFieldNameOfPackage.setText(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jTextFieldNameOfPackage.text")); // NOI18N
        jTextFieldNameOfPackage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNameOfPackageKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNameOfPackageKeyPressed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jLabel7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelEntity, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jLabelEntity.text")); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jTextFieldNameOfProject, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNameOfPackage, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelEntity, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNameOfProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldNameOfPackage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabelEntity)))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jPanel7.border.title"))); // NOI18N

        jTextAreaEntity.setColumns(20);
        jTextAreaEntity.setRows(5);
        jTextAreaEntity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaEntityKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTextAreaEntity);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/avbravo/reportwizard/resources/clear.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jButton1.text")); // NOI18N
        jButton1.setToolTipText(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jButton1.toolTipText")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonGoPage2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/avbravo/reportwizard/resources/next_1.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButtonGoPage2, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jButtonGoPage2.text")); // NOI18N
        jButtonGoPage2.setToolTipText(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jButtonGoPage2.toolTipText")); // NOI18N
        jButtonGoPage2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGoPage2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButtonGoPage2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonGoPage2))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelProyectoLayout = new javax.swing.GroupLayout(jPanelProyecto);
        jPanelProyecto.setLayout(jPanelProyectoLayout);
        jPanelProyectoLayout.setHorizontalGroup(
            jPanelProyectoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProyectoLayout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 285, Short.MAX_VALUE))
            .addGroup(jPanelProyectoLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelProyectoLayout.setVerticalGroup(
            jPanelProyectoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProyectoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jPanelProyecto.TabConstraints.tabTitle"), jPanelProyecto); // NOI18N

        jScrollPane2.setViewportView(jTextPaneJasperAll);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jLabel2.text")); // NOI18N

        jTextFieldTituloofReportAll.setText(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jTextFieldTituloofReportAll.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jLabel1.text")); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "81/2x11" }));

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        org.openide.awt.Mnemonics.setLocalizedText(jButtonAll, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jButtonAll.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButtonDetails, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jButtonDetails.text")); // NOI18N

        jButtonGoPage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/avbravo/reportwizard/resources/back.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButtonGoPage1, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jButtonGoPage1.text")); // NOI18N
        jButtonGoPage1.setToolTipText(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jButtonGoPage1.toolTipText")); // NOI18N
        jButtonGoPage1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGoPage1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonAll, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDetails)
                .addGap(18, 18, 18)
                .addComponent(jButtonGoPage1)
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAll)
                    .addComponent(jButtonDetails))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonGoPage1))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldTituloofReportAll, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 157, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldTituloofReportAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPaneReporte.addTab(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jScrollPane3.setViewportView(jEditorPaneDetails);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jLabel8.text")); // NOI18N

        jTextFieldTituloOfReportDetails.setText(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jTextFieldTituloOfReportDetails.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jLabel9.text")); // NOI18N

        jComboBoxPaginaDetails.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "81/2 x11" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTituloOfReportDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel9)
                        .addGap(32, 32, 32)
                        .addComponent(jComboBoxPaginaDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldTituloOfReportDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBoxPaginaDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneReporte.addTab(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        javax.swing.GroupLayout jPanelReporteLayout = new javax.swing.GroupLayout(jPanelReporte);
        jPanelReporte.setLayout(jPanelReporteLayout);
        jPanelReporteLayout.setHorizontalGroup(
            jPanelReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneReporte)
        );
        jPanelReporteLayout.setVerticalGroup(
            jPanelReporteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneReporte, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(ReportWizardTopComponent.class, "ReportWizardTopComponent.jPanelReporte.TabConstraints.tabTitle"), jPanelReporte); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            JFileChooser projectChooser = new JFileChooser();
            projectChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            projectChooser.showOpenDialog(null);

            File projectToBeOpenedFile = projectChooser.getSelectedFile();
            if (projectToBeOpenedFile == null) {
                MySession.advertencia("Seleccione un proyecto web");
                jTextFieldNameOfProject.setText("");
                return;
            }
            FileObject projectToBeOpened = FileUtil.toFileObject(projectToBeOpenedFile);

            Project project = ProjectManager.getDefault().findProject(projectToBeOpened);
            if (project == null) {
                MySession.advertencia("Seleccione un proyecto Web");
                jTextFieldNameOfProject.setText("");
                return;

            }
            Project[] array = new Project[1];
            array[0] = project;
            OpenProjects.getDefault().open(array, false);
            /*
            *
             */
            String lnombre_proyecto = project.getProjectDirectory().getName();

            jTextFieldNameOfProject.setText(lnombre_proyecto);
            drawEmptyJasperAll();
            //  project.getProjectDirectory();

            ProyectoInformacion projectInformation = new ProyectoInformacion();
            if (projectInformation.getInformation(project)) {
                if (!MySession.isEsProyectoWeb()) {
                    nd = new NotifyDescriptor.Message("Seleccione un proyecto Web");
                    DialogDisplayer.getDefault().notify(nd);
                    jTextFieldNameOfProject.setText("");
                    return;
                }
                // jTextFieldReportShortPath.setText(MySession.getReportShortPath());
            }

        } catch (Exception ex) {
            MySession.error("Error" + ex.toString());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldNameOfPackageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNameOfPackageKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameOfPackageKeyTyped

    private void jTextFieldNameOfPackageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNameOfPackageKeyPressed
        generateNameReport();
    }//GEN-LAST:event_jTextFieldNameOfPackageKeyPressed

    private void jButtonGoPage2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGoPage2ActionPerformed

        goPage2();


    }//GEN-LAST:event_jButtonGoPage2ActionPerformed

    private void jTextAreaEntityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaEntityKeyPressed
        readkeyClass();
    }//GEN-LAST:event_jTextAreaEntityKeyPressed

    private void jButtonGoPage1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGoPage1ActionPerformed
        goPage1();
    }//GEN-LAST:event_jButtonGoPage1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextAreaEntity.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAll;
    private javax.swing.JButton jButtonDetails;
    private javax.swing.JButton jButtonGoPage1;
    private javax.swing.JButton jButtonGoPage2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBoxPaginaDetails;
    private javax.swing.JEditorPane jEditorPaneDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelEntity;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelProyecto;
    private javax.swing.JPanel jPanelReporte;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPaneReporte;
    private javax.swing.JTextArea jTextAreaEntity;
    private javax.swing.JTextField jTextFieldNameOfPackage;
    private javax.swing.JTextField jTextFieldNameOfProject;
    private javax.swing.JTextField jTextFieldTituloOfReportDetails;
    private javax.swing.JTextField jTextFieldTituloofReportAll;
    private javax.swing.JTextPane jTextPaneJasperAll;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    private void generateNameReport() {
        try {

//            jTextFieldReportShortPath.setText(MySession.getReportShortPath() + jTextFieldNameOfPackage.getText() + MySession.getFileSeparator() + jTextFieldNameOfReport.getText() + ".jrxml");
//            MySession.setReportShortPath(MySession.getReportShortPath() + jTextFieldNameOfPackage.getText() + MySession.getFileSeparator() + jTextFieldNameOfReport.getText() + ".jrxml");
            MySession.setNameOfPackage(jTextFieldNameOfPackage.getText());
        } catch (Exception e) {
            MySession.error("Error" + e.getLocalizedMessage());
        }
    }

    // <editor-fold defaultstate="collapsed" desc="readkeyClass()">                          
    private void readkeyClass() {
        try {

            int lines = jTextAreaEntity.getLineCount();
            for (int i = 0; i < lines; i++) {
                int start = jTextAreaEntity.getLineStartOffset(i);
                int end = jTextAreaEntity.getLineEndOffset(i);
                // Implement method processLine
                String line = jTextAreaEntity.getText(start, end - start);

                if (line.equals("pub")) {
                    jTextAreaEntity.setText(jTextAreaEntity.getText() + "lic class ");
                } else {
                    if (line.contains("public class")) {
                        String x = line.replace("public class", "");
                        String name = x.replace("{", "").trim();
                        x = x.replace("{", "").toLowerCase().trim();

                        if (!jTextAreaEntity.getText().contains("{")) {
                            jTextFieldNameOfPackage.setText(x);
                            jLabelEntity.setText(name);
                        }

                        if (!jTextAreaEntity.getText().contains("@Id") && jTextAreaEntity.getText().contains("{")) {
                            jTextAreaEntity.setText(jTextAreaEntity.getText() + "\n@Id");
                        }
                    } else {
                        line = line.trim();
                        System.out.println("line: " + line);
                        if (line.equals("pub")) {
                            jTextAreaEntity.setText(jTextAreaEntity.getText() + "lic class ");
                        }
                        if (line.equals("pr")) {
                            jTextAreaEntity.setText(jTextAreaEntity.getText() + "ivate ");
                        }
                        if (line.equals("private St") || line.equals("private st")) {
                            jTextAreaEntity.setText(jTextAreaEntity.getText() + "ring ");
                        }

                        if (line.equals("private In") || line.equals("private in")) {
                            jTextAreaEntity.setText(jTextAreaEntity.getText() + "teger ");
                        }
                        if (line.equals("private Do") || line.equals("private do")) {
                            jTextAreaEntity.setText(jTextAreaEntity.getText() + "uble ");
                        }
                        if (line.equals("private Da") || line.equals("private da")) {
                            jTextAreaEntity.setText(jTextAreaEntity.getText() + "te ");
                        }
                    }
                }

            }

//            for (String line : jTextAreaEntity.getText().split("\\n")) {
            generateNameReport();
        } catch (Exception e) {
            MySession.error("readkeyClass()" + e.getLocalizedMessage());
        }

    }
    // </editor-fold> 

    // <editor-fold defaultstate="collapsed" desc="goPage2()">                          
    private void goPage2() {
        try {
            entityValid = true;
            MySession.getEntidadList().removeAll(MySession.getEntidadList());

            if (jTextFieldNameOfProject.getText().equals("")) {
                MySession.error("Seleccione el proyecto web");
                return;
            }

            if (jTextFieldNameOfPackage.getText().equals("")) {
                MySession.error("Indique el nombre del paquete");
                return;
            }
            if (jTextAreaEntity.getText().equals("")) {
                MySession.error("Ingrese la clase a procesar");
                jTextAreaEntity.requestFocus();
                return;
            }
            //
            MySession.setAllTablesWithPrimaryKey(false);
            EntityReader entityReader = new EntityReader();
            entityReader.readEntity(jLabelEntity.getText(), jTextAreaEntity.getText());
            if (MySession.getEntidad().getAtributosList().isEmpty()) {
                entityValid = false;
            }
            if (!entityValid) {
                MySession.advertencia("La clase no es valida");
                return;
            }

            if (!MySession.getAllTablesWithPrimaryKey()) {
                MySession.advertencia("No hay ningun atributo con llave primaria @Id");
                return;
            }
            drawEmptyJasperAll();
            jTextPaneJasperAll.setText(MySession.getTextJasperAll());

            jTabbedPane1.add(jPanelReporte, "Reporte");
            jTabbedPane1.remove(jPanelProyecto);

        } catch (Exception e) {
            MySession.error("goPage2()" + e.getLocalizedMessage());
        }
    }
// </editor-fold> 
    // <editor-fold defaultstate="collapsed" desc="goPage1()">                          

    private void goPage1() {
        try {
            jTabbedPane1.add(jPanelProyecto, "Proyecto");
            jTabbedPane1.remove(jPanelReporte);

        } catch (Exception e) {
            MySession.error("goPage2()" + e.getLocalizedMessage());
        }
    } // </editor-fold> 

    // <editor-fold defaultstate="collapsed" desc="drawEmptyJasperAll()">                          
    private void drawEmptyJasperAll() {
        try {

            jTextPaneJasperAll.setText("");
            MySession.setTextJasperAll("");

            headerAll();
            defineFieldAll();
            addTextJasperAll("");
            backgroundAll();
            addTextJasperAll("");
            titleAll();
            pageHeaderAll();
            columnHeaderAll();
            detailAll();
            columnFooterAll();
            pageFooterAll();
            summaryAll();
            closeAll();
            

        } catch (Exception e) {
            MySession.error("drawEmptyJasper()" + e.getLocalizedMessage());
        }
    }
// </editor-fold> 
    // <editor-fold defaultstate="collapsed" desc="addTextJasperAll(String texto) ">

    private void addTextJasperAll(String texto) {
        try {
            // Atributos para la frase, en negrita
            if (MySession.getTextJasperAll().equals("")) {
                MySession.setTextJasperAll(texto);
            } else {
                MySession.setTextJasperAll(MySession.getTextJasperAll() + "\n" + texto);
            }

        } catch (Exception e) {
            MySession.error("addTextJasperAll()" + e.getLocalizedMessage());
        }
    }// </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="headerAll()">                          
    public void headerAll() {
        try {
            addTextJasperAll("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
            addTextJasperAll("<jasperReport xmlns=\"http://jasperreports.sourceforge.net/jasperreports\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd\" name=\"report name\" pageWidth=\"595\" pageHeight=\"842\" columnWidth=\"535\" leftMargin=\"20\" rightMargin=\"20\" topMargin=\"20\" bottomMargin=\"20\" >");
            addTextJasperAll("	<property name=\"ireport.zoom\" value=\"1.0\"/>");
            addTextJasperAll("	<property name=\"ireport.x\" value=\"0\"/>");
            addTextJasperAll("	<property name=\"ireport.y\" value=\"0\"/>");
            addTextJasperAll("     <parameter name=\"P_EMPRESA\" class=\"java.lang.String\"/>");
        } catch (Exception e) {
            MySession.error("headerAll()" + e.getLocalizedMessage());
        }
    }
    // </editor-fold> 
    // <editor-fold defaultstate="collapsed" desc="backgroundAll()">                          

    public void backgroundAll() {
        try {
            addTextJasperAll("  <background>");
            addTextJasperAll("          <band splitType=\"Stretch\"/>");
            addTextJasperAll(" </background>");
        } catch (Exception e) {
            MySession.error("backgroundAll()" + e.getLocalizedMessage());
        }
    }

    // </editor-fold> 
// <editor-fold defaultstate="collapsed" desc="pageHeaderAll() ">
    public void pageHeaderAll() {
        try {
            addTextJasperAll("<pageHeader>");
            addTextJasperAll("	<band height=\"79\" splitType=\"Stretch\">");
            addTextJasperAll("		<textField>");
            addTextJasperAll("			<reportElement x=\"182\" y=\"3\" width=\"218\" height=\"31\" />");
            addTextJasperAll("			<textElement>");
            addTextJasperAll("				<font size=\"14\" isBold=\"true\"/>");
            addTextJasperAll("			</textElement>");
            addTextJasperAll("			<textFieldExpression><![CDATA[$P{P_EMPRESA}]]></textFieldExpression>");
            addTextJasperAll("		</textField>");
            addTextJasperAll("		<staticText>");
            addTextJasperAll("			<reportElement x=\"182\" y=\"40\" width=\"197\" height=\"31\" />");
            addTextJasperAll("			<textElement>");
            addTextJasperAll("				<font size=\"12\" isBold=\"true\"/>");
            addTextJasperAll("			</textElement>");
            addTextJasperAll("			<text><![CDATA[" + jTextFieldTituloofReportAll.getText() + "]]></text>");
            addTextJasperAll("		</staticText>");
            addTextJasperAll("		<staticText>");
            addTextJasperAll("			<reportElement x=\"423\" y=\"31\" width=\"37\" height=\"20\" />");
            addTextJasperAll("			<text><![CDATA[Fecha:]]></text>");
            addTextJasperAll("		</staticText>");
            addTextJasperAll("		<textField pattern=\"dd/MM/yyyy\">");
            addTextJasperAll("			<reportElement x=\"473\" y=\"29\" width=\"67\" height=\"20\" />");
            addTextJasperAll("			<textFieldExpression><![CDATA[new java.util.Date()]]></textFieldExpression>");
            addTextJasperAll("		</textField>");
            addTextJasperAll("		<staticText>");
            addTextJasperAll("			<reportElement x=\"424\" y=\"51\" width=\"46\" height=\"20\" />");
            addTextJasperAll("			<text><![CDATA[Hora:]]></text>");
            addTextJasperAll("		</staticText>");
            addTextJasperAll("		<textField pattern=\"h.mm a\">");
            addTextJasperAll("			<reportElement x=\"473\" y=\"51\" width=\"74\" height=\"20\" />");
            addTextJasperAll("			<textFieldExpression><![CDATA[new java.util.Date()]]></textFieldExpression>");
            addTextJasperAll("		</textField>");
            addTextJasperAll("	</band>");
            addTextJasperAll("</pageHeader>");
        } catch (Exception e) {
            MySession.error("pageHeaderAll()" + e.getLocalizedMessage());
        }
    }// </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="titleAll()">
    public void titleAll() {
        try {
            addTextJasperAll("  <title>");
            addTextJasperAll("    <band height=\"34\" splitType=\"Stretch\"/>");
            addTextJasperAll("  </title>");
        } catch (Exception e) {
            MySession.error("titleAll()" + e.getLocalizedMessage());
        }
    }
// </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="defineFieldAll()">

    public void defineFieldAll() {
        try {
            String type = "";
            String name = "";
            for (Entidad e : MySession.getEntidadList()) {
                Integer count = 0;
                for (Atributos a : e.getAtributosList()) {
                    count++;
                    name = a.getNombre();
                    if (count < 5) {
                        switch (a.getTipo()) {

                            case "Integer":
                            case "int":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.lang.Integer\"/>");
                                break;
                            case "Double":
                            case "double":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.lang.Double\"/>");
                                break;
                            case "String":
                            case "Character":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.lang.String\"/>");
                                break;

                            case "Date":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.util.Date\"/>");
                                break;
                            case "Timestamp":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.sql.Timestamp\"/>");
                                break;
                            case "Time":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.sql.Time\"/>");
                                break;
                            case "Boolean":
                                addTextJasperAll("	 <field name=\"" + name + "\" class=\"java.lang.Boolean\"/>");
                                break;
                            case "BigInteger":
                            case "Long":
                            case "long":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.lang.Long\"/>");
                                break;
                            case "byte[]":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.lang.Byte\"/>");
                                break;
                            case "Float":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.lang.Float\"/>");
                                break;

                            case "Short":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.lang.Short\"/>");
                                break;
                            case "InputStream":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.io.InputStream\"/>");
                                break;
                            case "Collection":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.util.Collection\"/>");
                                break;
                            case "List":
                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.util.List\"/>");
                                break;

                            case "Object":

                                addTextJasperAll("	<field name=\"" + name + "\" class=\"java.lang.Object\"/>");
                                break;
                            default:
                                if (Utilidades.esTipoList(a.getTipo())) {
                                    //Es una lista
                                    addTextJasperAll("	<field name=\"" + name + "\" class=\"java.util.List\"/>");
                                } else {
                                    addTextJasperAll("	<field name=\"" + name + "\" class=\"java.lang.Object\"/>");
                                }

                        }

                    }
                }
            }

        } catch (Exception e) {
            MySession.error("defineFieldAll()" + e.getLocalizedMessage());
        }
    }
    // </editor-fold>

// <editor-fold defaultstate="collapsed" desc="columnHeaderAll()">
    public void columnHeaderAll() {
        try {
            Integer[] x = {10, 117, 235, 347, 456};
            addTextJasperAll(" <columnHeader>");
            addTextJasperAll("	      <band height=\"23\" splitType=\"Stretch\">");
            for (Entidad e : MySession.getEntidadList()) {
                Integer count = 0;
                for (Atributos a : e.getAtributosList()) {
                    if (count < 5) {
                        addTextJasperAll("     <staticText>");
                        addTextJasperAll("	       <reportElement x=\"" + x[count] + "\" y=\"2\" width=\"100\" height=\"20\" />");
                        addTextJasperAll("	       <textElement>");
                        addTextJasperAll("		       <font isBold=\"true\"/>");
                        addTextJasperAll("	       </textElement>");
                        addTextJasperAll("	       <text><![CDATA[" + a.getNombre() + "]]></text>");
                        addTextJasperAll("     </staticText>");
                        count++;
                    }

                }
            }

            addTextJasperAll("	         </band>");
            addTextJasperAll(" </columnHeader>");

        } catch (Exception e) {
            MySession.error("columnHeaderAll()" + e.getLocalizedMessage());
        }
    }
    // </editor-fold>
// <editor-fold defaultstate="collapsed" desc="detailAll()">

    public void detailAll() {
        try {
            Integer[] x = {10, 117, 235, 347, 456};
            addTextJasperAll(" <detail>");
            addTextJasperAll("	    <band height=\"27\" splitType=\"Stretch\">");
            for (Entidad e : MySession.getEntidadList()) {
                Integer count = 0;
                for (Atributos a : e.getAtributosList()) {
                    if (count < 5) {
                        switch (a.getTipo().toLowerCase().trim()) {
                            case "double":
                                addTextJasperAll("     <textField pattern=\"###0.00\">");
                                break;
                            case "date":
                                addTextJasperAll("     <textField pattern=\"dd/MM/yyyy\">");
                                break;
                            default:
                                addTextJasperAll("     <textField >");
                        }

                        addTextJasperAll("             <reportElement x=\"" + x[count] + "\" y=\"2\" width=\"100\" height=\"20\" />");
                        addTextJasperAll("	            <textFieldExpression><![CDATA[$F{" + a.getNombre() + "}]]></textFieldExpression>");
                        addTextJasperAll("      </textField>");

                        count++;
                    }

                }
            }

            addTextJasperAll("	    </band>");
            addTextJasperAll(" </detail>");

        } catch (Exception e) {
            MySession.error("detailAll()" + e.getLocalizedMessage());
        }
    }
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="columnFooterAll()">
    public void columnFooterAll() {
        try {
            Integer[] x = {10, 117, 235, 347, 456};
            addTextJasperAll(" <columnFooter>");
            addTextJasperAll("	       <band height=\"45\" splitType=\"Stretch\"/>");
            addTextJasperAll(" <columnFooter>");

        } catch (Exception e) {
            MySession.error("columnFooterAll()" + e.getLocalizedMessage());
        }
    }

    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="pageFooterAll()">
    public void pageFooterAll() {
        try {
            Integer[] x = {10, 117, 235, 347, 456};
            addTextJasperAll(" <pageFooter>");
            addTextJasperAll("	       <band height=\"54\" splitType=\"Stretch\">");
            addTextJasperAll("	               <staticText>");
            addTextJasperAll("	                       <reportElement x=\"438\" y=\"11\" width=\"35\" height=\"20\" />");
            addTextJasperAll("	                       <text><![CDATA[Pag.]]></text>");
            addTextJasperAll("	               </staticText>");
             addTextJasperAll("	               <textField>");
            addTextJasperAll("	                       <reportElement x=\"480\" y=\"11\" width=\"67\" height=\"20\" />");
            addTextJasperAll("	                       <textFieldExpression><![CDATA[$V{PAGE_NUMBER}]]></textFieldExpression>");
            addTextJasperAll("	               </textField>");            
            addTextJasperAll("          </band>");
            addTextJasperAll(" </pageFooter>");

        } catch (Exception e) {
            MySession.error("pageFooterAll()" + e.getLocalizedMessage());
        }
    }
    // </editor-fold>
    
     // <editor-fold defaultstate="collapsed" desc="columnFooterAll()">
    public void summaryAll() {
        try {
      
            addTextJasperAll(" <summary>");
            addTextJasperAll("	       <band height=\"42\" splitType=\"Stretch\"/>");
            addTextJasperAll(" </summary>");

        } catch (Exception e) {
            MySession.error("summaryAll()" + e.getLocalizedMessage());
        }
    }

    // </editor-fold>
     // <editor-fold defaultstate="collapsed" desc="closeAll()">
    public void closeAll() {
        try {
  
            addTextJasperAll("</jasperReport>");
            
        } catch (Exception e) {
            MySession.error("closeAll()" + e.getLocalizedMessage());
        }
    }

    // </editor-fold>
}
